stages:
  - lint
  - test
  - deploy

# lint: # Vérification de la qualité du code js
#   stage: lint # Dans l'étape lint
#   tags:
#     - docker
#   image: node
#   script:
#     - npm install
#     - npm lint 2> lint_report.txt # On redirige la sortie d'erreur dans un fichier
#   artifacts: # Les rapports seront disponibles pour d'autres jobs
#     paths:
#       - lint_report.txt

test-e2e:
  stage: test
  image: cypress/base:16.18.1 # Image fournie par cypress avec ce qu'il faut
  tags:
    - docker
  script:
    - cd frontend
    - npm i # Installe ce qui est décrit dans package.json
    - npm run test > ../test-e2e.txt
  artifacts:
    paths:
      - test-e2e.txt # Le fichier de sortie est disponible pour d'autres jobs


test-api:
  stage: test
  image: node
  tags:
    - docker
  script:
    - cd backendsqlite
    - npm i # Installe ce qui est décrit dans package.json
    - npm run test > ../test-api.txt 
  artifacts:
    paths:
      - test-api.txt # Le fichier de sortie est disponible pour d'autres jobs

# badges:
#   stage: deploy
#   image: python:latest
#   script:
#     - pip install anybadge # installe le module anybadge
#     - chmod u+x badge_script.sh # rend le script exécutable
#     - ./badge_script.sh # Script de génération des badges
#   dependencies: # Les badges sont générés à partir des rapports s'ils sont disponibles
#     - test
#     - lint
#   artifacts:
#     paths:
#       - api.svg
#       - lint.svg
#   when: always


