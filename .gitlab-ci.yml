stages:
  - lint
  - test
  - deploy and generate apk

lint: # Vérification de la qualité du code js
  stage: lint # Dans l'étape lint
  tags:
    - docker
  image: node
  script:
    - npm install
    - npm run lint 2> lint_report.txt # On redirige la sortie d'erreur dans un fichier
  artifacts: # Les rapports seront disponibles pour d'autres jobs
    paths:
      - lint_report.txt

test-e2e:
  stage: test
  image: cypress/base:16.18.1 # Image fournie par cypress avec ce qu'il faut
  tags:
    - docker
  script:
    - cd frontend
    - npm i # Installe ce qui est décrit dans package.json
    - npm run test > ../test-e2e.txt
  artifacts:
    paths:
      - test-e2e.txt # Le fichier de sortie est disponible pour d'autres jobs

test-api:
  stage: test
  image: node
  tags:
    - docker
  script:
    - cd backendsqlite
    - npm i # Installe ce qui est décrit dans package.json
    - npm run test > ../test-api.txt
  artifacts:
    paths:
      - test-api.txt # Le fichier de sortie est disponible pour d'autres jobs

pages:
  stage: deploy and generate apk
  tags:
    - docker
  image: sebastienviardot/rnenvsv:buster
  script:
    - chmod a+x frontend/genereapk.sh
    - cd frontend
  - ./genereapk.sh
  artifacts:
    paths:
      - frontend/public/*

scalingo:
  stage: deploy and generate apk
  tags:
    - docker
  variables:
    # SCALINGO_API_TOKEN # variable à ne pas définir en clair ici (cf instructions à la fin du .gitlab-ci.yml ci-dessous)
    SCALINGO_APP_NAME: fkh-resto # le nom de votre appli chez scalingo
    SCALINGO_REGION: osc-fr1 # l'instance de scalingo sur laquelle votre appli est déployée
    GIT_DEPTH: 0
    PROJECT_DIR: backendsqlite # Le répertoire dans le dépôt où est le backend
  image: ruby:3.1.3 # car dpl est codé en Ruby
  script:
    - gem install dpl --pre # gem est le gestionnaire de paquets pour Ruby
    - curl -O https://cli-dl.scalingo.com/install && bash install # scalingo CLI est installé
    - scalingo --app=$SCALINGO_APP_NAME env-set PROJECT_DIR=$PROJECT_DIR # Pour indiquer sur le dépôt distant où est le backend (s'il est à la racine du projet ceci est facultatif, et il est possible de le faire une fois pour toute directement dans l'interface web de scalingo)
    - dpl --provider=scalingo --app=$SCALINGO_APP_NAME --api-token=$SCALINGO_API_TOKEN --region=$SCALINGO_REGION --branch=refs/heads/main
    # la variable SCALINGO_API_TOKEN contient le token que vous avez généré chez scalingo via le menu `User Settings > API tokens`
    #
    # Afin que la variable SCALINGO_API_TOKEN n'apparaissent pas en clair sur notre dépôt public gitlab, on définit cette variable via
    # le menu `Settings > CI/CD > Variables` et on la masque dans le résultat des logs des jobs en lui appliquant la propriété "Masked"
    # Plus de détails sur https://docs.gitlab.com/ee/ci/variables/index.html.
